{
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "injector",
    "namespace": "zarf",
    "labels": {
      "app": "zarf-injector",
      "zarf.dev/agent": "ignore"
    }
  },
  "spec": {
    "volumes": [
      {
        "name": "init",
        "configMap": {
          "name": "rust-binary",
          "defaultMode": 511
        }
      },
      {
        "name": "seed",
        "emptyDir": {}
      },
      {
        "name": "foo",
        "configMap": {
          "name": "foo"
        }
      },
      {
        "name": "bar",
        "configMap": {
          "name": "bar"
        }
      }
    ],
    "containers": [
      {
        "name": "injector",
        "image": "docker.io/library/ubuntu:latest",
        "command": [
          "/zarf-init/zarf-injector",
          "shasum"
        ],
        "workingDir": "/zarf-init",
        "resources": {
          "limits": {
            "cpu": "1",
            "memory": "256Mi"
          },
          "requests": {
            "cpu": "500m",
            "memory": "64Mi"
          }
        },
        "volumeMounts": [
          {
            "name": "init",
            "mountPath": "/zarf-init/zarf-injector",
            "subPath": "zarf-injector"
          },
          {
            "name": "seed",
            "mountPath": "/zarf-seed"
          },
          {
            "name": "foo",
            "mountPath": "/zarf-init/foo",
            "subPath": "foo"
          },
          {
            "name": "bar",
            "mountPath": "/zarf-init/bar",
            "subPath": "bar"
          }
        ],
        "readinessProbe": {
          "httpGet": {
            "path": "/v2/",
            "port": 5000
          },
          "periodSeconds": 2,
          "successThreshold": 1,
          "failureThreshold": 10
        },
        "imagePullPolicy": "IfNotPresent",
        "securityContext": {
          "capabilities": {
            "drop": [
              "ALL"
            ]
          },
          "runAsNonRoot": true,
          "readOnlyRootFilesystem": true,
          "allowPrivilegeEscalation": false
        }
      }
    ],
    "restartPolicy": "Never",
    "nodeName": "injection-node",
    "securityContext": {
      "runAsUser": 1000,
      "runAsGroup": 2000,
      "fsGroup": 2000,
      "seccompProfile": {
        "type": "RuntimeDefault"
      }
    }
  }
}
