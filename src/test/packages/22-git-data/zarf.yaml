kind: ZarfPackageConfig
metadata:
  name: git-data-test
  version: 1.0.0
  description: A Git package with additional test cases for different scenarios

components:
  - name: full-repo
    required: true
    repos:
      # Do a full Git Repo Mirror
      - https://github.com/zarf-dev/zarf-public-test.git
      # The following performs a full Git Repo Mirror forcing a fallback to host `git`
      - https://dev.azure.com/defenseunicorns/zarf-public-test/_git/zarf-public-test

  - name: specific-tag
    required: true
    repos:
      # The following performs a tag Git Repo Mirror with `go-git` (internal to Zarf)
      - https://github.com/zarf-dev/zarf-public-test.git@v0.0.1
      # The following performs a refspec tag Git Repo Mirror with `go-git`
      - https://github.com/zarf-dev/zarf-public-test.git@refs/tags/v0.0.1
      # The following performs a tag Git Repo Mirror forcing a fallback to host `git`
      - https://dev.azure.com/defenseunicorns/zarf-public-test/_git/zarf-public-test@v0.0.1
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-test -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 2
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3

  - name: specific-branch
    required: true
    repos:
      # The following performs a branch Git Repo Mirror with `go-git` (internal to Zarf)
      - https://github.com/zarf-dev/zarf-public-test.git@refs/heads/dragons
      # The following performs a branch Git Repo Mirror forcing a fallback to host `git`
      - https://dev.azure.com/defenseunicorns/zarf-public-test/_git/zarf-public-test@refs/heads/dragons
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-test -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 3
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3

  - name: specific-hash
    required: true
    repos:
      # The following performs a SHA Git Repo Mirror with `go-git` (internal to Zarf)
      - https://github.com/zarf-dev/zarf-public-test.git@01a23218923f24194133b5eb11268cf8d73ff1bb
      # The following performs a SHA Git Repo Mirror forcing a fallback to host `git`
      - https://dev.azure.com/defenseunicorns/zarf-public-test/_git/zarf-public-test@01a23218923f24194133b5eb11268cf8d73ff1bb
    actions:
      onDeploy:
        before:
          # Check to verify the package secret has been saved for the already deployed component
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-test -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 4
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3
        onSuccess:
          - cmd: test $(./zarf tools kubectl get secret -n zarf zarf-package-git-data-test -o jsonpath='{.data.*}' | base64 --decode | jq -r .deployedComponents | jq '. | length') -eq 4
            description: Check that the package secret has been updated with the deployed component
            maxRetries: 3
