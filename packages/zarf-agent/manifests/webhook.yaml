apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: zarf
webhooks:
  - name: agent-pod.zarf.dev
    namespaceSelector:
      matchExpressions:
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            # Ensure we don't mess with kube-system
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
        # Ignore K3s Klipper
        - key: svccontroller.k3s.cattle.io/svcname
          operator: DoesNotExist
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/pod"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - ""
        apiVersions:
          - "v1"
        resources:
          - "pods"
          - "pods/ephemeralcontainers"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
  - name: agent-flux-ocirepo.zarf.dev
    namespaceSelector:
      matchExpressions:
        # Ensure we don't mess with kube-system
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/flux-ocirepository"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - "source.toolkit.fluxcd.io"
        apiVersions:
          - "*"
        resources:
          - "ocirepositories"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
  - name: agent-flux-helmrepo.zarf.dev
    namespaceSelector:
      matchExpressions:
        # Ensure we don't mess with kube-system
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/flux-helmrepository"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - "source.toolkit.fluxcd.io"
        apiVersions:
          # While v1beta1 doesn't have the `type: oci` and is unsupported we still want to run mutations
          # so that we can show a warning in the logs
          - "*"
        resources:
          - "helmrepositories"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
  - name: agent-flux-gitrepo.zarf.dev
    namespaceSelector:
      matchExpressions:
        # Ensure we don't mess with kube-system
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/flux-gitrepository"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - "source.toolkit.fluxcd.io"
        apiVersions:
          - "v1beta1"
          - "v1beta2"
          - "v1"
        resources:
          - "gitrepositories"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
  - name: agent-argocd-application.zarf.dev
    namespaceSelector:
      matchExpressions:
        # Ensure we don't mess with kube-system
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/argocd-application"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - "argoproj.io"
        apiVersions:
          - "v1alpha1"
        resources:
          - "applications"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
  - name: agent-argocd-repository.zarf.dev
    namespaceSelector:
      matchExpressions:
        # Ensure we don't mess with kube-system
        - key: "kubernetes.io/metadata.name"
          operator: NotIn
          values:
            - "kube-system"
        # Allow ignoring whole namespaces
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
    objectSelector:
      matchExpressions:
        # Always ignore specific resources if requested by annotation/label
        - key: zarf.dev/agent
          operator: NotIn
          values:
            - "skip"
            - "ignore"
        - key: argocd.argoproj.io/secret-type
          operator: In
          values:
            - repository
    clientConfig:
      service:
        name: agent-hook
        namespace: zarf
        path: "/mutate/argocd-repository"
      caBundle: "###ZARF_AGENT_CA###"
    rules:
      - operations:
          - "CREATE"
          - "UPDATE"
        apiGroups:
          - ""
        apiVersions:
          - "v1"
        resources:
          - "secrets"
    admissionReviewVersions:
      - "v1"
      - "v1beta1"
    sideEffects: None
