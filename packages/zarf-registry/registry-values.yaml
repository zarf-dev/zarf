persistence:
  enabled: ###ZARF_VAR_REGISTRY_PVC_ENABLED###
  storageClass: "###ZARF_STORAGE_CLASS###"
  size: "###ZARF_VAR_REGISTRY_PVC_SIZE###"
  existingClaim: "###ZARF_VAR_REGISTRY_EXISTING_PVC###"
  accessMode: "###ZARF_VAR_REGISTRY_PVC_ACCESS_MODE###"

image:
  repository: "###ZARF_REGISTRY###/###ZARF_CONST_REGISTRY_IMAGE###"
  tag: "###ZARF_CONST_REGISTRY_IMAGE_TAG###"

imagePullSecrets:
  - name: private-registry

proxy:
  enabled: ###ZARF_REGISTRY_PROXY###
  hostNetwork: ###ZARF_VAR_HOST_NETWORK###
  tolerations:
    ###ZARF_VAR_PROXY_TOLERATIONS###
  image:
    repository: "###ZARF_SEED_REGISTRY###/###ZARF_CONST_PROXY_IMAGE###"
    tag: "###ZARF_CONST_PROXY_IMAGE_TAG###"
  registry:
    image:
      repository: "###ZARF_SEED_REGISTRY###/###ZARF_CONST_REGISTRY_IMAGE###"
  injector:
    hostPort: ###ZARF_INJECTOR_HOSTPORT###
    image: "###ZARF_INJECTOR_IMAGE###"
    payLoadConfigMapAmount: "###ZARF_INJECTOR_PAYLOAD_CONFIGMAPS###"
    shasum: "###ZARF_INJECTOR_SHASUM###"

secrets:
  htpasswd: "###ZARF_HTPASSWD###"
  configData:
    http:
      secret: "###ZARF_REGISTRY_SECRET###"

ipv6Only: ###ZARF_IPV6_ONLY###

service:
  nodePort: "###ZARF_NODEPORT###"

resources:
  requests:
    cpu: "###ZARF_VAR_REGISTRY_CPU_REQ###"
    memory: "###ZARF_VAR_REGISTRY_MEM_REQ###"
  limits:
    cpu: "###ZARF_VAR_REGISTRY_CPU_LIMIT###"
    memory: "###ZARF_VAR_REGISTRY_MEM_LIMIT###"

fullnameOverride: "zarf-docker-registry"

podLabels:
  zarf.dev/agent: "ignore"

affinity:
  enabled: ###ZARF_VAR_REGISTRY_AFFINITY_ENABLE###
  custom:
    ###ZARF_VAR_REGISTRY_AFFINITY_CUSTOM###

tolerations:
  ###ZARF_VAR_REGISTRY_TOLERATIONS###

autoscaling:
  enabled: ###ZARF_VAR_REGISTRY_HPA_ENABLE###
  mapReplicasToNodes: ###ZARF_VAR_REGISTRY_HPA_AUTO_SIZE###
  minReplicas: "###ZARF_VAR_REGISTRY_HPA_MIN###"
  maxReplicas: "###ZARF_VAR_REGISTRY_HPA_MAX###"
  targetCPUUtilizationPercentage: ###ZARF_VAR_REGISTRY_HPA_TARGET_CPU###

caBundle: |
  ###ZARF_VAR_REGISTRY_CA_BUNDLE###

extraEnvVars:
  ###ZARF_VAR_REGISTRY_EXTRA_ENVS###

serviceAccount:
  # Specifies whether a service account should be created
  create: ###ZARF_VAR_REGISTRY_CREATE_SERVICE_ACCOUNT###
  # The name of the service account to use. If name not set and create is true, a name is generated using fullname template
  name: "###ZARF_VAR_REGISTRY_SERVICE_ACCOUNT_NAME###"
  annotations:
    ###ZARF_VAR_REGISTRY_SERVICE_ACCOUNT_ANNOTATIONS###
