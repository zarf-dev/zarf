name: Test ECR Publishing
on:
  schedule:
    - cron: "0 7 * * * " ## Every day at 0700 UTC
  workflow_dispatch: ## Give us the ability to run this manually

# Abort prior jobs in the same workflow / PR
concurrency:
  group: ecr-publish-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  ecr-nightly-test:
    if: ${{ github.repository == 'zarf-dev/zarf' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Auth with AWS
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: ${{ secrets.AWS_NIGHTLY_ECR_ROLE_ARN }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-east-1
          role-duration-seconds: 3600

      - name: Setup golang
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod

      - name: Build the Zarf binary
        run: make build-cli-linux-amd

      # NOTE: The aws cli will need to be explicitly installed on self-hosted runners
      - name: Login to the ECR Registry
        run: aws ecr-public get-login-password --region us-east-1 | ./build/zarf tools registry login --username AWS --password-stdin public.ecr.aws

      - name: Test publishing and pulling to ECR
        run: go test ./src/test/nightly/ecr_publish_test.go

      - name: Send trigger to Slack on workflow failure
        if: failure()
        uses: ./.github/actions/slack
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
