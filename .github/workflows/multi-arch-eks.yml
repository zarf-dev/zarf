name: Test multi-arch EKS Cluster
on:
  schedule:
    - cron: "0 7 * * *" ## Every day at 0700 UTC
  workflow_dispatch: ## Give us the ability to run this manually
  pull_request:

permissions:
  id-token: write
  contents: read

# Abort prior jobs in the same workflow / PR
concurrency:
  group: e2e-eks-multi-arch-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eks-nightly-test:
    if: ${{ github.repository == 'zarf-dev/zarf' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # - name: Setup golang
      #   uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      #   with:
      #     go-version-file: go.mod
      - name: Debug OIDC Token Claims
        run: |
          # Request the OIDC token
          TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | \
                          jq -r '.value')

          # Decode and display the payload
          echo "OIDC Token Claims:"
          echo $TOKEN | cut -d'.' -f2 | base64 -d 2>/dev/null | jq .
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}

      # - name: Build binary and zarf packages
      #   uses: ./.github/actions/packages
      - name: Debug GitHub Context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Job: ${{ github.job }}"
          echo "pr head sha: ${{ github.event.client_payload.pull_request.head.sha }}"
          echo "github sha: ${{ github.sha }}"

      - name: Auth with AWS
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_NIGHTLY_EKS_ROLE_ARN }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-east-1
          role-duration-seconds: 7200

      - name: Download eksctl
        run: |
          curl -L -o eksctl_Linux_amd64.tar.gz \
            https://github.com/weaveworks/eksctl/releases/download/v0.170.0/eksctl_Linux_amd64.tar.gz
          tar -xzf eksctl_Linux_amd64.tar.gz
          chmod +x eksctl

      - name: create cluster
        run: |
          ./eksctl cluster create --config-file=.github/eks.yaml

      - name: teardown cluster
        run: |
          ./eksctl delete cluster -f eks.yaml --disable-nodegroup-eviction --wait
