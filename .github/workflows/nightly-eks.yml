name: Test EKS Cluster
on:
  pull_request:
  schedule:
    - cron: "0 7 * * *" ## Every day at 0700 UTC
  workflow_dispatch: ## Give us the ability to run this manually
    inputs:
      cluster_name:
        type: string
        default: zarf-nightly-eks-e2e-test
        description: Name of the eks cluster that the test will create
      instance_type:
        type: string
        default: t3.medium
        description: EC2 instance type to use for the EKS cluster nodes

permissions:
  id-token: write
  contents: read

# Abort prior jobs in the same workflow / PR
concurrency:
  group: e2e-eks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  eks-nightly-test:
    if: ${{ github.repository == 'zarf-dev/zarf' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Debug OIDC Token Claims
        run: |
          # Request the OIDC token
          TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | \
                          jq -r '.value')

          # Decode and display the payload
          echo "OIDC Token Claims:"
          echo $TOKEN | cut -d'.' -f2 | base64 -d 2>/dev/null | jq .
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}

      - name: Setup golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.mod

      - name: Build binary and zarf packages
        uses: ./.github/actions/packages

      - name: Auth with AWS
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.AWS_NIGHTLY_EKS_ROLE_ARN }}
          role-session-name: ${{ github.job || github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-east-1
          role-duration-seconds: 7200

      - name: Build the eks package
        run: ./build/zarf package create packages/distros/eks -o build --confirm

      - name: Deploy the eks package
        run: |
          ./build/zarf package deploy build/zarf-package-distro-eks-amd64-0.0.3.tar.zst \
            --components=deploy-eks-cluster \
            --set=EKS_CLUSTER_NAME=${{ inputs.cluster_name || 'zarf-nightly-eks-e2e-test' }} \
            --set=EKS_INSTANCE_TYPE=${{ inputs.instance_type || 't3.medium' }} \
            --set=PERMISSIONS_BOUNDARY_ARN=arn:aws:iam::205930641482:policy/uds_permissions_boundary \
            --set=PERMISSIONS_BOUNDARY_TAG=uds_permissions_boundary \
            --confirm

      - name: Run tests
        run: make test-e2e-with-cluster ARCH=amd64

      - name: show cluster logs
        uses: ./.github/actions/debug-cluster
        if: always()

      - name: Teardown the cluster
        if: always()
        run: |
          ./build/zarf package deploy build/zarf-package-distro-eks-amd64-0.0.3.tar.zst \
            --components=teardown-eks-cluster \
            --set=EKS_CLUSTER_NAME=${{ inputs.cluster_name || 'zarf-nightly-eks-e2e-test' }} \
            --confirm

      - name: Save logs
        if: always()
        uses: ./.github/actions/save-logs

      # - name: Send trigger to Slack on workflow failure
      #   if: failure()
      #   uses: ./.github/actions/slack
      #   with:
      #     slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
